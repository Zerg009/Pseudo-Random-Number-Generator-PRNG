// sim. var. Bernoulli
function SimBernoulli(p)
	u = urand();
	if (u < p) return (1);
	else return (0);
end function



// sim. var. unif. distrib. discret
// pe {0, 1, 2, ..., n-1}
function SimDiscretU1(n)
	u = urand();
	k = int(n*u);
	return k;
end function



// sim. var. unif. distrib. discret
// pe {m, ..., n}
function SimDiscretU2(m, n)
	u = urand();
	k = int((n-m+1)*u);	// k in {0, ..., n}
	return (k+m);
end function



// sim. var. aleat. discrete de distrib. generala neuniforma
function SimDiscretN(x, p, n)	// x, p = tablouri
	k = 0;
	F = p0;
	u = urand();
	while (u >= F) {
		k = k + 1;
		F = F + pk;
	}

	return (xk);
end function



// simularea var. geom. (1)
function SimGeom1(p)
	k = 0;
	do {
		u = urand();
		k = k + 1;
	} while (u > p);
	return k;
end function



// simularea var. geom. (2)
function SimGeom2(p)
	u = urand();
	x = int(log(1-u)/log(1-p)) + 1;
	return x;
end function